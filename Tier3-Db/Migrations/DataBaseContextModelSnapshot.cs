// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tier3.DataAccess;

namespace Tier3.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Tier3.Models.Burial.Burial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullNameOfTheDeadMan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfParticipants")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Burial");
                });

            modelBuilder.Entity("Tier3.Models.BurialPreference", b =>
                {
                    b.Property<int>("BurialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PreferenceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BurialId", "PreferenceId");

                    b.HasIndex("PreferenceId");

                    b.ToTable("BurialPreferences");
                });

            modelBuilder.Entity("Tier3.Models.Client.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Tier3.Models.ClientBurial", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BurialId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClientId", "BurialId");

                    b.HasIndex("BurialId");

                    b.ToTable("ClientBurials");
                });

            modelBuilder.Entity("Tier3.Models.Employee.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Tier3.Models.Preference.Preference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BurialId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BurialId");

                    b.ToTable("Preferences");
                });

            modelBuilder.Entity("Tier3.Models.Burial.Burial", b =>
                {
                    b.HasOne("Tier3.Models.Client.Client", "Client")
                        .WithMany("Burials")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Tier3.Models.BurialPreference", b =>
                {
                    b.HasOne("Tier3.Models.Burial.Burial", "Burial")
                        .WithMany("BurialPreferences")
                        .HasForeignKey("BurialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tier3.Models.Preference.Preference", "Preference")
                        .WithMany("BurialPreferences")
                        .HasForeignKey("PreferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Burial");

                    b.Navigation("Preference");
                });

            modelBuilder.Entity("Tier3.Models.ClientBurial", b =>
                {
                    b.HasOne("Tier3.Models.Burial.Burial", "BurialClient")
                        .WithMany("ClientBurials")
                        .HasForeignKey("BurialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tier3.Models.Client.Client", "Client")
                        .WithMany("ClientBurials")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BurialClient");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Tier3.Models.Preference.Preference", b =>
                {
                    b.HasOne("Tier3.Models.Burial.Burial", null)
                        .WithMany("PreferenceForBurial")
                        .HasForeignKey("BurialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tier3.Models.Burial.Burial", b =>
                {
                    b.Navigation("BurialPreferences");

                    b.Navigation("ClientBurials");

                    b.Navigation("PreferenceForBurial");
                });

            modelBuilder.Entity("Tier3.Models.Client.Client", b =>
                {
                    b.Navigation("Burials");

                    b.Navigation("ClientBurials");
                });

            modelBuilder.Entity("Tier3.Models.Preference.Preference", b =>
                {
                    b.Navigation("BurialPreferences");
                });
#pragma warning restore 612, 618
        }
    }
}
